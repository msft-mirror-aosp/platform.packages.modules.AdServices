// Signature format: 2.0
package android.app.sdksandbox {

  public final class SandboxedSdkContext extends android.content.ContextWrapper {
  }

  public abstract class SandboxedSdkProvider {
    ctor public SandboxedSdkProvider();
    method @NonNull public abstract android.view.View getView(@NonNull android.content.Context, @NonNull android.os.Bundle);
    method public abstract void onDataReceived(@NonNull android.os.Bundle, @NonNull android.app.sdksandbox.SandboxedSdkProvider.DataReceivedCallback);
    method public abstract void onLoadSdk(@NonNull android.app.sdksandbox.SandboxedSdkContext, @NonNull android.os.Bundle, @NonNull java.util.concurrent.Executor, @NonNull android.app.sdksandbox.SandboxedSdkProvider.OnLoadSdkCallback);
  }

  public static interface SandboxedSdkProvider.DataReceivedCallback {
    method public void onDataReceivedError(@NonNull String);
    method public void onDataReceivedSuccess(@NonNull android.os.Bundle);
  }

  public static interface SandboxedSdkProvider.OnLoadSdkCallback {
    method public void onLoadSdkError(@NonNull String);
    method public void onLoadSdkFinished(@NonNull android.os.Bundle);
  }

  public final class SdkSandboxManager {
    method @NonNull public java.util.List<android.content.pm.SharedLibraryInfo> getLoadedSdkLibrariesInfo();
    method public static int getSdkSandboxState();
    method public void loadSdk(@NonNull String, @NonNull android.os.Bundle, @NonNull java.util.concurrent.Executor, @NonNull android.app.sdksandbox.SdkSandboxManager.LoadSdkCallback);
    method public void requestSurfacePackage(@NonNull String, int, int, int, @NonNull android.os.Bundle, @NonNull java.util.concurrent.Executor, @NonNull android.app.sdksandbox.SdkSandboxManager.RequestSurfacePackageCallback);
    method public void sendData(@NonNull String, @NonNull android.os.Bundle, @NonNull java.util.concurrent.Executor, @NonNull android.app.sdksandbox.SdkSandboxManager.SendDataCallback);
    field public static final int LOAD_SDK_ALREADY_LOADED = 101; // 0x65
    field public static final int LOAD_SDK_INTERNAL_ERROR = 500; // 0x1f4
    field public static final int LOAD_SDK_NOT_FOUND = 100; // 0x64
    field public static final int REQUEST_SURFACE_PACKAGE_INTERNAL_ERROR = 700; // 0x2bc
    field public static final String SDK_SANDBOX_SERVICE = "sdk_sandbox";
    field public static final int SDK_SANDBOX_STATE_DISABLED = 0; // 0x0
    field public static final int SDK_SANDBOX_STATE_ENABLED_PROCESS_ISOLATION = 2; // 0x2
    field public static final int SEND_DATA_INTERNAL_ERROR = 800; // 0x320
  }

  public static interface SdkSandboxManager.LoadSdkCallback {
    method public void onLoadSdkFailure(int, @NonNull String);
    method public void onLoadSdkSuccess(@NonNull android.os.Bundle);
  }

  public static interface SdkSandboxManager.RequestSurfacePackageCallback {
    method public void onSurfacePackageError(int, @NonNull String);
    method public void onSurfacePackageReady(@NonNull android.view.SurfaceControlViewHost.SurfacePackage, int, @NonNull android.os.Bundle);
  }

  public static interface SdkSandboxManager.SendDataCallback {
    method public void onSendDataError(int, @NonNull String);
    method public void onSendDataSuccess(@NonNull android.os.Bundle);
  }

}

