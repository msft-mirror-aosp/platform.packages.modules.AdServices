/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.adservices.data.kanon;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;
import androidx.room.TypeConverters;

import com.android.adservices.data.common.FledgeRoomConverters;

import com.google.auto.value.AutoValue;
import com.google.auto.value.AutoValue.CopyAnnotations;

import java.time.Instant;
import java.util.UUID;

@Entity(tableName = DBClientParameters.TABLE_NAME)
@TypeConverters({FledgeRoomConverters.class})
@AutoValue
@CopyAnnotations
public abstract class DBClientParameters {
    public static final String TABLE_NAME = "client_parameters";

    /** Client public parameters in byte array. */
    @NonNull
    @CopyAnnotations
    @ColumnInfo(name = "client_public_parameters", typeAffinity = ColumnInfo.BLOB)
    @SuppressWarnings({"AutoValueImmutableFields", "AutoValueMutable"})
    public abstract byte[] getClientPublicParameters();

    /** Client private parameters in byte array. */
    @NonNull
    @CopyAnnotations
    @ColumnInfo(name = "client_private_parameters", typeAffinity = ColumnInfo.BLOB)
    @SuppressWarnings({"AutoValueImmutableFields", "AutoValueMutable"})
    public abstract byte[] getClientPrivateParameters();

    /**
     * Expiry instant of client parameters, this field is returned in the register client response.
     */
    @NonNull
    @CopyAnnotations
    @ColumnInfo(name = "expiry_instant")
    public abstract Instant getClientParametersExpiryInstant();

    /** Client id that generated and registered this client parameters. */
    @NonNull
    @CopyAnnotations
    @ColumnInfo(name = "client_id")
    public abstract UUID getClientId();

    /** Client Parameters id, primary key for this table. */
    @ColumnInfo(name = "client_parameters_id")
    @PrimaryKey(autoGenerate = true)
    @Nullable
    @CopyAnnotations
    public abstract Long getClientParametersId();

    /**
     * Client params version of the client parameters. This field is returned in the register client
     * parameters. *
     */
    @NonNull
    @CopyAnnotations
    @ColumnInfo(name = "client_params_version")
    public abstract String getClientParamsVersion();

    /** Returns a builder for {@link DBClientParameters} */
    public static DBClientParameters.Builder builder() {
        return new AutoValue_DBClientParameters.Builder();
    }

    /** Creates and returns a {@link DBClientParameters} */
    public static DBClientParameters create(
            @NonNull String clientParamsVersion,
            @NonNull long clientParametersId,
            @NonNull UUID clientId,
            @NonNull Instant clientParametersExpiryInstant,
            @NonNull byte[] clientPrivateParameters,
            @NonNull byte[] clientPublicParameters) {
        return builder()
                .setClientParamsVersion(clientParamsVersion)
                .setClientParametersId(clientParametersId)
                .setClientId(clientId)
                .setClientPrivateParameters(clientPrivateParameters)
                .setClientPublicParameters(clientPublicParameters)
                .setClientParametersExpiryInstant(clientParametersExpiryInstant)
                .build();
    }

    /** Builder class for {@link DBClientParameters} */
    @AutoValue.Builder
    public abstract static class Builder {

        /** Sets the client params version. */
        public abstract Builder setClientParamsVersion(String clientParamsVersion);

        /**
         * Sets the client parameters id. This ID is only used internally and does not need to be
         * stable or reproducible. It is auto-generated by Room if set to {@code null} on insertion.
         */
        @NonNull
        public abstract Builder setClientParametersId(@Nullable Long clientParametersId);

        /** Sets the client id. */
        @NonNull
        public abstract Builder setClientId(UUID clientId);

        /** Sets the client params expiry instant. */
        @NonNull
        public abstract Builder setClientParametersExpiryInstant(
                Instant clientParametersExpiryInstant);

        /** Sets the client public params. */
        @NonNull
        public abstract Builder setClientPublicParameters(byte[] clientPublicParameters);

        /** Sets the client private parameters. */
        @NonNull
        public abstract Builder setClientPrivateParameters(byte[] clientPrivateParameters);

        /** Builds the {@link DBClientParameters} object */
        @NonNull
        public abstract DBClientParameters build();
    }
}
